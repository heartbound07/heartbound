spring.application.name=heartbound2

server.port=${PORT:8080}
server.servlet.context-path=/api

# Heroku PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://${JDBC_DATABASE_URL}:${JDBC_PORT}/${JDBC_DATABASE_NAME}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# Connection Pool Settings - Enhanced for WebSocket Performance
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=10000
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.leak-detection-threshold=30000
spring.datasource.hikari.connection-test-query=SELECT 1

# JWT Configuration - Use environment variables for security
jwt.secret=${JWT_SECRET}
jwt.access-token-expiration-ms=900000
jwt.refresh-token-expiration-ms=2592000000
jwt.refresh-secret=${JWT_REFRESH_SECRET}

# JWT Performance Caching Configuration - Optimized for production
jwt.cache.enabled=true
jwt.cache.token-validation.max-size=25000
jwt.cache.token-validation.expire-after-write-minutes=20
jwt.cache.claims.max-size=20000
jwt.cache.claims.expire-after-write-minutes=20
jwt.cache.user-details.max-size=20000
jwt.cache.user-details.expire-after-write-minutes=20

# Enhanced CORS Configuration - Production Security Settings
cors.allowed-origins=
cors.allowed-origins.production=https://app.heartbound.net,https://www.heartbound.net
cors.allowed-origins.staging=
cors.allowed-headers=Content-Type,Authorization,X-Requested-With,Accept,Origin,X-CSRF-Token
cors.exposed-headers=X-Rate-Limit-Remaining,X-Rate-Limit-Limit,X-Rate-Limit-Reset,X-Total-Count
cors.max-age=7200
cors.allow-credentials=true

# CORS Origin Validation Configuration - Production (Strict)
cors.origin.validation.enabled=true
cors.origin.pattern.enabled=true
cors.origin.patterns=https://*.heartbound.net

# CORS Validation and Monitoring Configuration - Production (Strict)
cors.validation.enabled=true
cors.validation.max-rejections-per-hour=5
cors.validation.alert-threshold=3

# Production Logging Configuration
logging.level.org.springframework.security=INFO
logging.level.com.app.heartbound=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.com.zgamelogic=INFO

# Discord OAuth settings
discord.client-id=${DISCORD_CLIENT_ID}
discord.client-secret=${DISCORD_CLIENT_SECRET}
discord.redirect-uri=${DISCORD_REDIRECT_URI:https://heartbound-api.herokuapp.com/api/oauth2/callback/discord}
discord.scopes=identify guilds.join guilds

# Admin configuration
admin.discord.id=${ADMIN_DISCORD_ID}

# Rate Limiting Configuration - More restrictive in production
rate.limit.max-requests=60
rate.limit.window-minutes=1
rate.limit.burst-capacity=100
rate.limit.cleanup-interval-ms=3600000
rate.limit.cache-maximum-size=100000

# Daily Message Activity Cache Configuration - Optimized for production
cache.daily-activity.max-size=10000
cache.daily-activity.expire-after-write-minutes=20

# Discord Bot Settings Cache Configuration
cache.discord-bot-settings.max-size=1
cache.discord-bot-settings.expire-after-write-minutes=30

# Prison Cache Configuration - Production optimized
cache.prison.max-size=1000
cache.prison.expire-after-write-hours=72

# Discord Bot Configuration
discord.token=${DISCORD_BOT_TOKEN}
discord.server.id=${DISCORD_SERVER_ID}
discord.category.id=${DISCORD_CATEGORY_ID}
# Category for pairing channels (optional - will use root if not specified)
discord.pairing.category.id=${DISCORD_PAIRING_CATEGORY_ID:1381698583178383502}
discord.gateway-intents=GUILD_MEMBERS,GUILD_VOICE_STATES,MESSAGE_CONTENT

# Frontend URL for all redirects and callbacks
frontend.base.url=${FRONTEND_URL:https://heartbound.net}

# Backend URL for all redirects and callbacks
backend.base.url=${BACKEND_URL:https://heartbound-d00f1b55e2ad.herokuapp.com/api}

# Heroku-specific configurations
spring.mvc.async.request-timeout=60000
# Chat Activity Rewards Configuration - More conservative in production
discord.activity.enabled=true
discord.activity.credits-to-award=5
discord.activity.message-threshold=7
discord.activity.time-window-minutes=120
discord.activity.cooldown-seconds=60
discord.activity.min-message-length=20

# Leveling System Configuration
discord.leveling.enabled=true
discord.leveling.xp-to-award=15
discord.leveling.base-xp=100
discord.leveling.level-multiplier=50
discord.leveling.level-exponent=2
discord.leveling.level-factor=5
discord.leveling.credits-per-level=50

# Discord Starter Role Configuration (removed when user reaches first level milestone)
discord.leveling.starter-role-id=1303106353014771773

# Production WebSocket Configuration
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css

# HTML Sanitization Configuration - Production (Strict)
html.sanitization.enabled=true
html.sanitization.strict-mode=true
html.sanitization.log-sanitization=true
html.sanitization.max-item-name-length=100
html.sanitization.max-description-length=500

# Security Headers Configuration - Production (Strict)
security.csp.enabled=true
security.csp.report-only=false
security.csp.report-uri=/api/security/csp-report
security.headers.enabled=true